/**
 * –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–ª—è –ø—Ä—è–º–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞–ø—Ä—è–º—É—é –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
 * –î–∞—Ç–∞: 4 –∏—é–ª—è 2025 –≥.
 */

// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç InlineEditor –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
// –ï—Å–ª–∏ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ–º –µ–≥–æ
const InlineEditor = (function() {
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    const config = {
        editableSelector: '[data-editable]',
        dateFieldSelector: '[data-field-type="date"]',
        editingClass: 'editing',
        dateFormat: 'DD.MM.YYYY'
    };

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
    const state = {
        activeElement: null,
        originalContent: null,
        flatpickrInstances: {}
    };

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
     */
    function init() {
        initEditableElements();
        initDateElements();
        
        // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ —ç–ª–µ–º–µ–Ω—Ç–∞
        document.addEventListener('click', handleOutsideClick);
        
        // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
        document.addEventListener('keydown', handleKeydown);

        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä');
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ã—á–Ω—ã—Ö —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    function initEditableElements() {
        const editableElements = document.querySelectorAll(config.editableSelector);
        
        editableElements.forEach(element => {
            if (element.getAttribute('data-field-type') !== 'date') {
                // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª–µ–π
                element.addEventListener('click', handleEditableClick);
            }
        });
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–∞—Ç—ã
     */
    function initDateElements() {
        const dateElements = document.querySelectorAll(config.dateFieldSelector);
        
        dateElements.forEach(element => {
            // –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
            disableExistingHandlers(element);
            
            // –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏–∑ –∞—Ç—Ä–∏–±—É—Ç–∞
            const dateFormat = element.dataset.dateFormat || 'dd.mm.yyyy';
            const formattedDateFormat = dateFormat.toLowerCase().replace('yyyy', 'Y').replace('dd', 'd').replace('mm', 'm');
            
            // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä flatpickr –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–∞—Ç—ã
            const flatpickrInstance = flatpickr(element, {
                dateFormat: formattedDateFormat,
                // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–≥–æ input
                altInput: false,
                allowInput: false,
                clickOpens: true, 
                static: true, 
                inline: false, // –ù–µ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤ —ç–ª–µ–º–µ–Ω—Ç
                // –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è UX
                monthSelectorType: 'dropdown',
                locale: 'ru',
                position: 'auto',
                appendTo: document.body, 
                disableMobile: true, // –û—Ç–∫–ª—é—á–∞–µ–º –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏
                
                onChange: (selectedDates, dateStr, instance) => {
                    if (dateStr && dateStr !== state.originalContent) {
                        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ä–∞–∑—É –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–∞—Ç—ã
                        element.textContent = dateStr;
                        notifyChange(element);
                    }
                },
                
                onOpen: () => {
                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
                    element.classList.add(config.editingClass);
                },
                
                onClose: () => {
                    // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
                    element.classList.remove(config.editingClass);
                    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
                    state.activeElement = null;
                }
            });
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä flatpickr
            state.flatpickrInstances[element.dataset.editable] = flatpickrInstance;
            
            // –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
            element.removeAttribute('class');
            element.classList.add('flatpickr-input');
            
            // –ó–∞–º–µ–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –ø—Ä—è–º–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
            element.addEventListener('click', (event) => {
                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å –¥—Ä—É–≥–∏–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
                event.preventDefault();
                event.stopPropagation();
                
                // –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã —Ä—è–¥–æ–º —Å —ç—Ç–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
                const parent = element.parentNode;
                const siblings = Array.from(parent.children);
                siblings.forEach(sibling => {
                    if (sibling !== element && (sibling.classList.contains('form-control') || 
                        sibling.classList.contains('editing') || 
                        sibling.hasAttribute('readonly'))) {
                        parent.removeChild(sibling);
                    }
                });
                
                // –ï—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ç–∏–ø–∞, –≤—ã—Ö–æ–¥–∏–º –∏–∑ –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                if (state.activeElement && state.activeElement !== element) {
                    exitEditMode(state.activeElement);
                }
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                state.originalContent = element.textContent.trim();
                state.activeElement = element;
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                element.classList.add(config.editingClass);
                
                // –°–æ–∑–¥–∞–µ–º –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø—Ä–∏ –∫–ª–∏–∫–µ
                setTimeout(() => {
                    try {
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é flatpickr –¥–ª—è —ç—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                        if (!flatpickrInstance) {
                            // –ï—Å–ª–∏ flatpickr –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
                            console.log('–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞');
                            
                            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã flatpickr
                            const options = {
                                dateFormat: 'd.m.Y',
                                locale: 'ru',
                                allowInput: true,
                                disableMobile: false,
                                onClose: function(selectedDates, dateStr) {
                                    if (dateStr && element) {
                                        element.textContent = dateStr;
                                        exitEditMode(element);
                                    }
                                }
                            };
                            
                            // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä flatpickr
                            flatpickrInstance = flatpickr(element, options);
                            state.flatpickrInstances[element.getAttribute('data-editable')] = flatpickrInstance;
                        }
                        
                        // –¢–µ–ø–µ—Ä—å –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
                        if (flatpickrInstance && typeof flatpickrInstance.open === 'function') {
                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ flatpickrInstance –Ω–µ –∏–º–µ–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ disabled –∏–ª–∏ –æ–Ω–æ false
                            if (!flatpickrInstance.disabled) {
                                flatpickrInstance.open();
                                
                                // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤ –≤–∏–¥–∏–º—É—é –æ–±–ª–∞—Å—Ç—å
                                const calendar = document.querySelector('.flatpickr-calendar');
                                if (calendar) {
                                    ensureElementVisible(calendar);
                                }
                            } else {
                                console.warn(`‚ö†Ô∏è –ö–∞–ª–µ–Ω–¥–∞—Ä—å –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞: ${element.textContent}`);
                            }
                        } else {
                            console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞: ${element.textContent}`);
                        }
                    } catch (error) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º:', error);
                    }
                }, 50);
            });
        });
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
     * @param {Event} event - —Å–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
     */
    function handleEditableClick(event) {
        const element = event.currentTarget;
        
        // –ï—Å–ª–∏ –º—ã —É–∂–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        if (element === state.activeElement) return;
        
        // –ï—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if (state.activeElement) {
            exitEditMode(state.activeElement);
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        state.originalContent = element.textContent.trim();
        state.activeElement = element;
        
        // –í—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        enterEditMode(element);
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
        event.stopPropagation();
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –¥–∞—Ç—ã (—É—Å—Ç–∞—Ä–µ–ª –∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —Ç.–∫. –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ initDateElements)
     * @deprecated
     * @param {Event} event - —Å–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
     */
    function handleDateClick(event) {
        // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –Ω–∞–ø—Ä—è–º—É—é –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ initDateElements
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
     * @param {Event} event - —Å–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
     */
    function handleOutsideClick(event) {
        if (!state.activeElement) return;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –Ω–µ –ø–æ –∞–∫—Ç–∏–≤–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏ –Ω–µ –ø–æ –µ–≥–æ –ø–æ—Ç–æ–º–∫–∞–º
        if (state.activeElement !== event.target && !state.activeElement.contains(event.target)) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –Ω–µ –±—ã–ª –ø–æ flatpickr –∫–∞–ª–µ–Ω–¥–∞—Ä—é
            if (!event.target.closest('.flatpickr-calendar')) {
                exitEditMode(state.activeElement);
            }
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
     * @param {Event} event - —Å–æ–±—ã—Ç–∏–µ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏
     */
    function handleKeydown(event) {
        if (!state.activeElement) return;
        
        // –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞ Escape, –æ—Ç–º–µ–Ω—è–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        if (event.key === 'Escape') {
            cancelEdit(state.activeElement);
            event.preventDefault();
        }
        
        // –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞ Enter, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if (event.key === 'Enter' && !event.shiftKey) {
            exitEditMode(state.activeElement);
            event.preventDefault();
        }
    }

    /**
     * –í—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
     * @param {HTMLElement} element - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç
     */
    function enterEditMode(element) {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        element.classList.add(config.editingClass);
        
        // –î–µ–ª–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–º
        element.contentEditable = 'true';
        
        // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –≤ –∫–æ–Ω–µ—Ü —Ç–µ–∫—Å—Ç–∞
        element.focus();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –≤ –∫–æ–Ω–µ—Ü —Ç–µ–∫—Å—Ç–∞
        const range = document.createRange();
        const selection = window.getSelection();
        range.selectNodeContents(element);
        range.collapse(false); // false –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∫–æ–ª–ª–∞–ø—Å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É —É–∑–ª–∞
        selection.removeAllRanges();
        selection.addRange(range);
    }

    /**
     * –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
     * @param {HTMLElement} element - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç
     */
    function exitEditMode(element) {
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –¥–µ–ª–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–º
        element.classList.remove(config.editingClass);
        element.contentEditable = 'false';
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        const newContent = element.textContent.trim();
        if (newContent !== state.originalContent) {
            notifyChange(element);
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
        state.activeElement = null;
    }

    /**
     * –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
     * @param {HTMLElement} element - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç
     */
    function cancelEdit(element) {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        element.textContent = state.originalContent;
        
        // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        exitEditMode(element);
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
     * @param {HTMLElement} element - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç
     */
    function notifyChange(element) {
        const fieldId = element.dataset.editable;
        const fieldName = element.dataset.fieldName || fieldId;
        const fieldType = element.dataset.fieldType || 'text';
        const newValue = element.textContent.trim();
        
        console.log(`üìù –ò–∑–º–µ–Ω–µ–Ω–æ –ø–æ–ª–µ ${fieldName}: ${newValue}`);
        
        // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        const changeEvent = new CustomEvent('template:fieldChanged', {
            detail: {
                fieldId,
                fieldName,
                fieldType,
                value: newValue
            }
        });
        
        document.dispatchEvent(changeEvent);
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç TemplateEditor, —É–≤–µ–¥–æ–º–ª—è–µ–º –µ–≥–æ
        if (window.TemplateEditor && window.TemplateEditor.onFieldChanged) {
            window.TemplateEditor.onFieldChanged(fieldId, newValue, fieldType);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ TemplateDataCollector –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω
        if (window.TemplateDataCollector && window.TemplateDataCollector.updateField) {
            window.TemplateDataCollector.updateField(fieldId, newValue, fieldType);
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
        if (window.TemplateDataCollector) {
            window.TemplateDataCollector.setUnsavedChanges(true);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
     */
    function refreshEditableElements() {
        // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã flatpickr
        Object.values(state.flatpickrInstances).forEach(instance => {
            instance.destroy();
        });
        state.flatpickrInstances = {};
        
        // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        initEditableElements();
        initDateElements();
    }

    /**
     * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç, —á—Ç–æ–±—ã —ç–ª–µ–º–µ–Ω—Ç –±—ã–ª –≤–∏–¥–µ–Ω –Ω–∞ —ç–∫—Ä–∞–Ω–µ (–ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
     * @param {HTMLElement} element - —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
     */
    function ensureElementVisible(element) {
        const rect = element.getBoundingClientRect();
        const windowHeight = window.innerHeight || document.documentElement.clientHeight;
        
        // –ï—Å–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –Ω–∏–∂–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É —ç–∫—Ä–∞–Ω–∞
        if (rect.bottom > windowHeight) {
            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
            window.scrollTo({
                top: scrollTop + (rect.bottom - windowHeight) + 20, // +20px –¥–ª—è –æ—Ç—Å—Ç—É–ø–∞
                behavior: 'smooth'
            });
        }
        
        // –ï—Å–ª–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≤–µ—Ä—Ö–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É —ç–∫—Ä–∞–Ω–∞
        if (rect.top < 0) {
            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
            window.scrollTo({
                top: scrollTop + rect.top - 20, // -20px –¥–ª—è –æ—Ç—Å—Ç—É–ø–∞
                behavior: 'smooth'
            });
        }
    }

    /**
     * –û—Ç–∫–ª—é—á–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å –Ω–∞—à–∏–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º
     * @param {HTMLElement} element - —ç–ª–µ–º–µ–Ω—Ç —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
     */
    function disableExistingHandlers(element) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —ç–ª–µ–º–µ–Ω—Ç–∞ data-initialized –∞—Ç—Ä–∏–±—É—Ç
        if (element.hasAttribute('data-initialized-inline-editor')) {
            return; // –£–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –Ω–∞—à–∏–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º
        }
        
        // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥—Ä—É–≥–∏–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º (TemplateEditor), –æ—Ç–∫–ª—é—á–∞–µ–º –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        if (window.TemplateEditor && window.TemplateEditor.disableElementHandlers) {
            window.TemplateEditor.disableElementHandlers(element);
        }
        
        // –ü–æ–º–µ—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞—à–∏–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º
        element.setAttribute('data-initialized-inline-editor', 'true');
        
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤ –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö
        if (element.getAttribute('data-field-type') === 'date') {
            // –û—Ç–∫–ª—é—á–∞–µ–º contentEditable –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–∞—Ç—ã, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –¥–≤–æ–π–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
            element.setAttribute('data-inline-edit-only', 'true');
        }
    }

    // –ü—É–±–ª–∏—á–Ω—ã–π API
    return {
        init,
        refreshEditableElements,
        exitEditMode: function() {
            if (state.activeElement) {
                exitEditMode(state.activeElement);
            }
        }
    };
})();

// –≠–∫—Å–ø–æ—Ä—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
window.InlineEditor = InlineEditor;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
(function() {
    try {
        if (typeof InlineEditor !== 'undefined' && InlineEditor.init) {
            InlineEditor.init();
            console.log('‚úÖ InlineEditor –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ');
        }
    } catch (e) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ InlineEditor:', e);
    }
})();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    if (typeof InlineEditor !== 'undefined' && InlineEditor.init) {
        console.log('üìù –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è InlineEditor –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
        InlineEditor.init();
        console.log('‚úÖ InlineEditor —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } else {
        console.error('‚ùå InlineEditor –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ init');
    }
});


