/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–π API
 */

// –†–µ–∂–∏–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
(function(window) {
    console.log('‚úÖ MobileNav Index: –ú–æ–¥—É–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω');
    
    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    class MobileNav {
        constructor() {
            this.initialized = false;
            this.scrollPosition = 0;
            this.navItems = [];
            this.activeSection = null;
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            this.settings = {
                animationDuration: 300,
                scrollThreshold: 100,
                useNativeScroll: true,
                debug: false
            };
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', () => this.init());
            } else {
                this.init();
            }
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        init() {
            if (this.initialized) return;
            
            console.log('üîÑ MobileNav: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
            
            // –ù–∞—Ö–æ–¥–∏–º DOM —ç–ª–µ–º–µ–Ω—Ç—ã
            this.container = document.querySelector('.mobile-nav-container');
            if (!this.container) {
                console.warn('‚ö†Ô∏è MobileNav: .mobile-nav-container –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM');
                return;
            }
            
            this.navBar = this.container.querySelector('.mobile-nav-bar');
            this.content = this.container.querySelector('.mobile-nav-content');
            
            if (!this.navBar || !this.content) {
                console.warn('‚ö†Ô∏è MobileNav: –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
                return;
            }
            
            // –ù–∞—Ö–æ–¥–∏–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            this.navItems = Array.from(this.navBar.querySelectorAll('.nav-item'));
            this.navItems.forEach(item => {
                item.addEventListener('click', (e) => this.handleNavClick(e));
            });
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
            this.setupScrolling();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
            this.initialized = true;
            console.log('‚úÖ MobileNav: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ–∫—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            this.activateSection(0);
            
            // –ü—É–±–ª–∏–∫—É–µ–º —Å–æ–±—ã—Ç–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            window.dispatchEvent(new CustomEvent('mobilenav:initialized'));
        }
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        setupScrolling() {
            if (this.settings.useNativeScroll) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Ç–∏–≤–Ω—É—é –ø—Ä–æ–∫—Ä—É—Ç–∫—É
                this.content.addEventListener('scroll', () => this.handleScroll());
            } else {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—É—é –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å –ø–æ–º–æ—â—å—é touch —Å–æ–±—ã—Ç–∏–π
                let startY = 0;
                let currentY = 0;
                
                this.content.addEventListener('touchstart', (e) => {
                    startY = e.touches[0].clientY;
                    currentY = this.scrollPosition;
                });
                
                this.content.addEventListener('touchmove', (e) => {
                    const deltaY = startY - e.touches[0].clientY;
                    this.scrollTo(currentY + deltaY);
                    e.preventDefault();
                });
            }
        }
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        handleScroll() {
            this.scrollPosition = this.content.scrollTop;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ–∫—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
            const sections = Array.from(this.content.querySelectorAll('.mobile-nav-section'));
            
            let activeIndex = 0;
            const viewportHeight = window.innerHeight;
            const scrollThreshold = viewportHeight * 0.3;
            
            sections.forEach((section, index) => {
                const rect = section.getBoundingClientRect();
                if (rect.top <= scrollThreshold && rect.bottom >= scrollThreshold) {
                    activeIndex = index;
                }
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            this.activateSection(activeIndex, false);
            
            // –ü—É–±–ª–∏–∫—É–µ–º —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
            window.dispatchEvent(new CustomEvent('mobilenav:scroll', {
                detail: { position: this.scrollPosition }
            }));
        }
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        handleNavClick(e) {
            e.preventDefault();
            
            const navItem = e.currentTarget;
            const index = this.navItems.indexOf(navItem);
            
            if (index !== -1) {
                this.activateSection(index, true);
            }
        }
        
        // –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–µ–∫—Ü–∏–∏ –ø–æ –∏–Ω–¥–µ–∫—Å—É
        activateSection(index, scroll = true) {
            // –ù–∞—Ö–æ–¥–∏–º —Å–µ–∫—Ü–∏—é –ø–æ –∏–Ω–¥–µ–∫—Å—É
            const sections = Array.from(this.content.querySelectorAll('.mobile-nav-section'));
            if (index < 0 || index >= sections.length) return;
            
            const section = sections[index];
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            this.navItems.forEach(item => item.classList.remove('active'));
            if (this.navItems[index]) {
                this.navItems[index].classList.add('active');
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ–∫—Ü–∏—é
            this.activeSection = section;
            
            // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ–∫—Ü–∏–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            if (scroll) {
                this.scrollToSection(section);
            }
            
            // –ü—É–±–ª–∏–∫—É–µ–º —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–µ–∫—Ü–∏–∏
            window.dispatchEvent(new CustomEvent('mobilenav:section-change', {
                detail: { index, section }
            }));
        }
        
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å–µ–∫—Ü–∏–∏
        scrollToSection(section) {
            if (this.settings.useNativeScroll) {
                section.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            } else {
                const sectionTop = section.offsetTop;
                this.scrollTo(sectionTop, true);
            }
        }
        
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
        scrollTo(position, animate = false) {
            if (this.settings.useNativeScroll) {
                this.content.scrollTo({
                    top: position,
                    behavior: animate ? 'smooth' : 'auto'
                });
            } else {
                if (animate) {
                    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
                    const start = this.scrollPosition;
                    const change = position - start;
                    const startTime = performance.now();
                    
                    const animate = (currentTime) => {
                        const elapsed = currentTime - startTime;
                        const progress = Math.min(elapsed / this.settings.animationDuration, 1);
                        
                        // –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
                        const easeOut = (t) => 1 - Math.pow(1 - t, 2);
                        const currentPosition = start + change * easeOut(progress);
                        
                        this.updateScrollPosition(currentPosition);
                        
                        if (progress < 1) {
                            requestAnimationFrame(animate);
                        }
                    };
                    
                    requestAnimationFrame(animate);
                } else {
                    this.updateScrollPosition(position);
                }
            }
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        updateScrollPosition(position) {
            this.scrollPosition = position;
            this.content.style.transform = `translateY(-${position}px)`;
        }
        
        // –ü—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        updateSettings(newSettings) {
            Object.assign(this.settings, newSettings);
            console.log('üîÑ MobileNav: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã', this.settings);
        }
        
        // –ü—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        getState() {
            return {
                initialized: this.initialized,
                scrollPosition: this.scrollPosition,
                activeSection: this.activeSection ? Array.from(this.content.querySelectorAll('.mobile-nav-section')).indexOf(this.activeSection) : null,
                settings: { ...this.settings }
            };
        }
    }
    
    // –°–æ–∑–¥–∞—ë–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
    const mobileNavInstance = new MobileNav();
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
    window.MobileNav = mobileNavInstance;
    
})(window);
