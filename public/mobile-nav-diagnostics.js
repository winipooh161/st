// –§–∞–π–ª –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω–∞');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
document.addEventListener('DOMContentLoaded', () => {
    runDiagnostics();
});

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
function runDiagnostics() {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–±—ä–µ–∫—Ç–∞ MobileNavWheelPicker
    if (window.MobileNavWheelPicker) {
        console.log('‚úÖ –û–±—ä–µ–∫—Ç MobileNavWheelPicker –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } else {
        console.log('‚ùå –û–±—ä–µ–∫—Ç MobileNavWheelPicker –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤
    checkScriptLoading();
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    checkDOMElements();
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±—ã—Ç–∏–π
    monitorEvents();
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS —Å—Ç–∏–ª–µ–π
    checkStyles();
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
    setupErrorTracking();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤
function checkScriptLoading() {
    const scripts = document.querySelectorAll('script');
    console.log(`üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${scripts.length} —Å–∫—Ä–∏–ø—Ç–æ–≤`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
    const scriptURLs = Array.from(scripts).map(s => s.src);
    
    const requiredScripts = [
        '/js/mobile-nav-wheel-picker.js',
        '/js/mobile-nav/index.js'
    ];
    
    requiredScripts.forEach(script => {
        const isLoaded = scriptURLs.some(url => url.includes(script));
        console.log(`${isLoaded ? '‚úÖ' : '‚ùå'} –°–∫—Ä–∏–ø—Ç ${script} ${isLoaded ? '–∑–∞–≥—Ä—É–∂–µ–Ω' : '–Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω'}`);
    });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function checkDOMElements() {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    const navContainer = document.querySelector('.mobile-nav-container');
    if (navContainer) {
        console.log('‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω');
    } else {
        console.log('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
    const triggers = document.querySelectorAll('[data-mobile-nav-trigger]');
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${triggers.length} —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏`);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS —Å—Ç–∏–ª–µ–π
function checkStyles() {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–∏–º–µ–Ω—è–µ–º—ã–µ —Å—Ç–∏–ª–∏
    const allStyles = Array.from(document.styleSheets);
    let navStylesFound = false;
    
    console.log(`üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${allStyles.length} —Ç–∞–±–ª–∏—Ü —Å—Ç–∏–ª–µ–π`);
    
    // –ò—â–µ–º –≤ —Å—Ç–∏–ª—è—Ö –∫–ª–∞—Å—Å—ã —Å "mobile-nav"
    allStyles.forEach((styleSheet) => {
        try {
            const rules = Array.from(styleSheet.cssRules);
            rules.forEach((rule) => {
                if (rule.selectorText && rule.selectorText.includes('mobile-nav')) {
                    navStylesFound = true;
                }
            });
        } catch (e) {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∏–ª–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö –¥–æ–º–µ–Ω–æ–≤
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å—Ç–∏–ª–∏ –∏–∑: ' + styleSheet.href);
        }
    });
    
    console.log(`${navStylesFound ? '‚úÖ' : '‚ùå'} –°—Ç–∏–ª–∏ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ ${navStylesFound ? '–Ω–∞–π–¥–µ–Ω—ã' : '–Ω–µ –Ω–∞–π–¥–µ–Ω—ã'}`);
}

// –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
function setupErrorTracking() {
    console.log('üîç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—à–∏–±–æ–∫ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    
    window.onerror = function(message, source, lineno, colno, error) {
        if(source.includes('mobile-nav') || message.includes('MobileNav')) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: ${message} (${source}:${lineno}:${colno})`);
            console.error('–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:', error ? error.stack : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
        }
    };
}

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–±—ã—Ç–∏–π
function monitorEvents() {
    console.log('üîç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–±—ã—Ç–∏–π –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∫–ª–∏–∫–∏ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç—É
    document.addEventListener('click', function(e) {
        const target = e.target.closest('[data-mobile-nav-trigger]');
        if (target) {
            console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ —Ç—Ä–∏–≥–≥–µ—Ä—É –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', target);
        }
    });
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', debounce(function() {
        console.log('üìè –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ - –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
        checkViewportSize();
    }, 250));
    
    // –°—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
    checkViewportSize();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
function checkViewportSize() {
    const width = window.innerWidth;
    const height = window.innerHeight;
    console.log(`üì± –†–∞–∑–º–µ—Ä viewport: ${width}x${height}px`);
    
    if (width <= 768) {
        console.log('üì± –ú–æ–±–∏–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω');
    } else {
        console.log('üñ•Ô∏è –î–µ—Å–∫—Ç–æ–ø–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω');
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è debounce
function debounce(func, wait) {
    let timeout;
    return function() {
        const context = this;
        const args = arguments;
        clearTimeout(timeout);
        timeout = setTimeout(() => {
            func.apply(context, args);
        }, wait);
    };
}

// –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
setInterval(() => {
    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –æ–±—ä–µ–∫—Ç–∞
    if (window.MobileNavWheelPicker) {
        console.log('‚úÖ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: MobileNavWheelPicker –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } else {
        console.log('‚ùå –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: MobileNavWheelPicker –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
        const scripts = document.querySelectorAll('script');
        const scriptURLs = Array.from(scripts).map(s => s.src);
        
        const mainScript = scriptURLs.find(url => url.includes('/js/mobile-nav/index.js'));
        if (mainScript) {
            console.log('‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–æ –æ–±—ä–µ–∫—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å–æ–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫
            console.log('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ JavaScript');
        }
    }
}, 10000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ MobileNavWheelPicker –≤—ã–∑–æ–≤ console.error
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—à–∏–±–æ–∫ –≤ –∫–æ–¥–µ MobileNavWheelPicker');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
try {
    // –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—ã—Ç–∞—Ç—å—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥ —á–µ—Ä–µ–∑ eval
    // –û–±—ã—á–Ω–æ eval –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è, –Ω–æ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —ç—Ç–æ –¥–æ–ø—É—Å—Ç–∏–º–æ
    function testScriptSyntax(url) {
        return fetch(url)
            .then(response => response.text())
            .then(code => {
                try {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ–º
                    new Function(code);
                    console.log(`‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å —Ñ–∞–π–ª–∞ ${url} –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω`);
                    return true;
                } catch (e) {
                    console.error(`‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ ${url}:`, e.message);
                    return false;
                }
            })
            .catch(err => {
                console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª ${url}:`, err);
                return false;
            });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    Promise.all([
        testScriptSyntax('/js/mobile-nav/index.js'),
        testScriptSyntax('/js/mobile-nav-wheel-picker.js')
    ]).then(results => {
        const allValid = results.every(Boolean);
        console.log(`${allValid ? '‚úÖ' : '‚ùå'} –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —Ñ–∞–π–ª–æ–≤: ${allValid ? '–≤—Å–µ —Ñ–∞–π–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã' : '–æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏'}`);
    });
} catch (e) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —Ñ–∞–π–ª–æ–≤:', e);
}
