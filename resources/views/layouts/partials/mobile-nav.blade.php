<nav class="mb-navigation mb-dock hide-desktop">
    <!-- –î–æ–±–∞–≤–ª—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –∑–æ–Ω—É –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∂–µ—Å—Ç–æ–≤ -->
    <div class="mb-gesture-protection"></div>
    
    <div class="mb-fixed-container">
        <div class="mb-scroller" id="nav-scroll-container">
            <div class="mb-icons-container" id="nav-icons-container">
                @if(request()->is('media/editor*') || request()->is('templates/create*') || request()->is('templates/editor*'))
                    <div class="mb-icon-wrapper" data-icon-id="back">
                        <a href="{{ url()->previous() }}" class="mb-nav-link">
                            <div class="mb-nav-icon-wrap">
                                <img src="{{ asset('images/icons/arrow-left.svg') }}" class="mb-nav-icon" alt="–ù–∞–∑–∞–¥" draggable="false">
                            </div>
                        </a>
                    </div>
                    <div class="mb-icon-wrapper" data-icon-id="home">
                        <a href="{{ route('home') }}" class="mb-nav-link {{ request()->routeIs('home') ? 'mb-active' : '' }}">
                            <div class="mb-nav-icon-wrap">
                                <img src="{{ asset('images/center-icon.svg') }}" class="mb-nav-icon" alt="–ì–ª–∞–≤–Ω–∞—è" draggable="false">
                            </div>
                        </a>
                    </div>
                   
                    
                 
                    @if(request()->is('media/editor*'))
                        <div class="mb-icon-wrapper" data-icon-id="save" data-popup-on-click="false">
                            <a href="#" class="mb-nav-link" id="save-media-btn">
                                <div class="mb-nav-icon-wrap">
                                    <img src="{{ asset('images/icons/save.svg') }}" class="mb-nav-icon" alt="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" draggable="false">
                                </div>
                            </a>
                        </div>
                    @elseif(request()->is('templates/create*') || request()->is('templates/editor*'))
                        <div class="mb-icon-wrapper" data-icon-id="save" data-popup-on-click="false">
                            <a href="#" class="mb-nav-link" id="save-media-btn" onclick="return false;">
                                <div class="mb-nav-icon-wrap">
                                    <img src="{{ asset('images/icons/save.svg') }}" class="mb-nav-icon" alt="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" draggable="false">
                                </div>
                            </a>
                        </div>
                    @endif
                @else
                    <div class="mb-icon-wrapper" data-icon-id="qr-scanner" data-modal="true" data-modal-target="qrScannerModal" data-popup-on-click="false">
                        <a href="#" class="mb-nav-link">
                            <div class="mb-nav-icon-wrap">
                                <img src="{{ asset('images/icons/qr-code.svg') }}" class="mb-nav-icon" alt="QR-—Å–∫–∞–Ω–µ—Ä" draggable="false">
                            </div>
                        </a>
                    </div>
                    <div class="mb-icon-wrapper" data-icon-id="home" data-popup-on-click="false">
                        <a href="{{ route('home') }}" class="mb-nav-link {{ request()->routeIs('home') ? 'mb-active' : '' }}">
                            <div class="mb-nav-icon-wrap">
                                <img src="{{ asset('images/center-icon.svg') }}" class="mb-nav-icon" alt="–ì–ª–∞–≤–Ω–∞—è" draggable="false">
                            </div>
                        </a>
                    </div>
                      <!-- –ù–æ–≤–∞—è –∏–∫–æ–Ω–∫–∞ –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ —Å –≤—ã–ø–∞–¥–∞—é—â–∏–º –º–µ–Ω—é -->
                <div class="mb-icon-wrapper" data-icon-id="templates" data-popup-on-click="true">
                    <a href="{{ Auth::check() ? route('my-templates') : route('public-templates') }}" class="mb-nav-link {{ request()->routeIs('my-templates', 'public-templates') ? 'mb-active' : '' }}">
                        <div class="mb-nav-icon-wrap">
                                <img src="{{ asset('images/icons/person.svg') }}" class="mb-nav-icon" alt="–®–∞–±–ª–æ–Ω—ã" draggable="false">
                            </div>
                    </a>
                </div>
                    <div class="mb-icon-wrapper" data-icon-id="create" data-popup-on-click="false">
                        <a href="{{ route('media.editor') }}" class="mb-nav-link {{ request()->routeIs('media.editor') ? 'mb-active' : '' }}">
                            <div class="mb-nav-icon-wrap">
                                <img src="{{ asset('images/icons/save.svg') }}" class="mb-nav-icon" alt="–°–æ–∑–¥–∞—Ç—å" draggable="false">
                            </div>
                        </a>
                    </div>
                @endif

              
            </div>
        </div>
    </div>
</nav>

<!-- –°–∫—Ä—ã—Ç—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º -->
<div style="display: none;">
    <div class="action-buttons position-fixed bottom-0 start-0 end-0 p-3 bg-white shadow-lg" id="actionButtons">
        <div class="row">
            <div class="col-12">
                <button type="button" class="btn btn-success btn-lg w-100" id="saveBtn">
                    <i class="bi bi-check-lg me-2"></i>–ì–æ—Ç–æ–≤–æ
                </button>
            </div>
        </div>
    </div>
</div>

<!-- –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Vite -->
@vite(['resources/js/mobile-nav-wheel-picker.js'])

<script>
// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
document.addEventListener('DOMContentLoaded', function() {
    const mbNavigation = document.querySelector('.mb-navigation');
    if (mbNavigation) {
        mbNavigation.classList.add('mb-nav-loaded');
        mbNavigation.classList.remove('mb-nav-hidden');
        mbNavigation.style.display = 'flex';
        mbNavigation.style.opacity = '1';
        mbNavigation.style.transform = 'translateY(0)';
        
        console.log('–ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    } else {
        console.warn('‚ö†Ô∏è –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    preventDragOnNavElements();
});

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 */
function preventDragOnNavElements() {
    document.querySelectorAll('.mb-nav-icon, .mb-icon-wrapper').forEach(element => {
        element.style.setProperty('-webkit-user-drag', 'none', 'important');
        element.style.setProperty('-khtml-user-drag', 'none', 'important');
        element.style.setProperty('-moz-user-drag', 'none', 'important');
        element.style.setProperty('-o-user-drag', 'none', 'important');
        element.style.setProperty('user-drag', 'none', 'important');
        element.draggable = false;
        
        element.addEventListener('dragstart', function(e) {
            e.preventDefault();
            return false;
        });
        
        element.addEventListener('selectstart', function(e) {
            if (e.target.tagName !== 'INPUT' && e.target.tagName !== 'TEXTAREA') {
                e.preventDefault();
                return false;
            }
        });
    });
}
</script>

<!-- –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ -->
<link rel="stylesheet" href="{{ asset('css/mobile-nav-optimized.css') }}">

<!-- –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö —à–∞–±–ª–æ–Ω–æ–≤ -->
@if(request()->is('templates/create*') || request()->is('templates/editor*'))
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
        const saveTemplateBtn = document.getElementById('save-template-btn');
        
        if (saveTemplateBtn) {
            console.log('üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–∞—Å–∞–Ω–∏—è (–º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞)
            saveTemplateBtn.addEventListener('touchend', function(e) {
                console.log('üëÜ –ö–∞—Å–∞–Ω–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞');
                e.preventDefault();
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–µ—Ä–∏–∏
                const seriesModal = document.getElementById('seriesModal');
                if (seriesModal && typeof bootstrap !== 'undefined') {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–∏–∏
                    console.log('üìã –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–µ—Ä–∏–∏');
                    const modal = new bootstrap.Modal(seriesModal);
                    modal.show();
                } else if (window.saveTemplateData) {
                    console.log('‚öôÔ∏è –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –Ω–∞–ø—Ä—è–º—É—é');
                    window.saveTemplateData();
                } else {
                    console.error('‚ùå –§—É–Ω–∫—Ü–∏—è saveTemplateData –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                }
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∏–∫–∞ (–¥–µ—Å–∫—Ç–æ–ø)
            saveTemplateBtn.addEventListener('click', function(e) {
                console.log('üñ±Ô∏è –ö–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞');
                e.preventDefault();
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–µ—Ä–∏–∏
                const seriesModal = document.getElementById('seriesModal');
                if (seriesModal && typeof bootstrap !== 'undefined') {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–∏–∏
                    console.log('üìã –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–µ—Ä–∏–∏');
                    const modal = new bootstrap.Modal(seriesModal);
                    modal.show();
                } else if (window.saveTemplateData) {
                    console.log('‚öôÔ∏è –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –Ω–∞–ø—Ä—è–º—É—é');
                    window.saveTemplateData();
                } else {
                    console.error('‚ùå –§—É–Ω–∫—Ü–∏—è saveTemplateData –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                }
            });
        } else {
            console.warn('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
    });
</script>
@endif

@if(request()->is('media/editor*'))
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–¥–∏–∞
        const saveMediaBtn = document.getElementById('save-media-btn');
        
        if (saveMediaBtn) {
            console.log('üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–¥–∏–∞');
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            const originalOnclick = saveMediaBtn.onclick;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            saveMediaBtn.addEventListener('click', handleSaveMedia);
            saveMediaBtn.addEventListener('touchend', handleSaveMedia);
            
            function handleSaveMedia(e) {
                console.log('üëÜ –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–¥–∏–∞');
                e.preventDefault();
                
                // –ï—Å–ª–∏ –µ—Å—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –≤—ã–∑—ã–≤–∞–µ–º –µ–≥–æ
                if (originalOnclick) {
                    originalOnclick.call(this, e);
                }
                
                // –ò–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                console.log('‚öôÔ∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–¥–∏–∞');
            }
        } else {
            console.warn('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
    });
</script>
@endif
